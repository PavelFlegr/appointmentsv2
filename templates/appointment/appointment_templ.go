// Code generated by templ@v0.2.364 DO NOT EDIT.

package appointment

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import appointmentService "appointmentsv2/services/appointment"
import "appointmentsv2/templates"
import "fmt"

func Appointments(appointments []appointmentService.Appointment) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_2 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<div class=\"ui container\"><form class=\"ui form segment\" hx-post=\"/manage/appointment\" hx-target=\"#appointments\" hx-swap=\"beforeend\" hx-vals=\"js:timezone:Intl.DateTimeFormat().resolvedOptions().timeZone\"><div class=\"ui action input\"><input placeholder=\"Name\" name=\"name\"><button class=\"ui primary button\">")
			if err != nil {
				return err
			}
			var_3 := `Add appointment`
			_, err = templBuffer.WriteString(var_3)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</button></div></form><table class=\"ui compact table\" id=\"appointments\"><thead><tr><th>")
			if err != nil {
				return err
			}
			var_4 := `Name`
			_, err = templBuffer.WriteString(var_4)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th></th><th></th><th></th></tr></thead><tbody>")
			if err != nil {
				return err
			}
			for _, appointment := range appointments {
				err = AppointmentItem(appointment).Render(ctx, templBuffer)
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</tbody></table></div>")
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = templates.Layout().Render(templ.WithChildren(ctx, var_2), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func AppointmentItem(appointment appointmentService.Appointment) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_5 := templ.GetChildren(ctx)
		if var_5 == nil {
			var_5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<tr class=\"appointment\"><td><a href=\"")
		if err != nil {
			return err
		}
		var var_6 templ.SafeURL = templ.URL(fmt.Sprintf("/manage/appointment/%v", appointment.Id))
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_6)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		var var_7 string = appointment.Name
		_, err = templBuffer.WriteString(templ.EscapeString(var_7))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></td><td class=\"collapsing\"><a href=\"")
		if err != nil {
			return err
		}
		var var_8 templ.SafeURL = templ.URL(fmt.Sprintf("/reserve/%v", appointment.Token))
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_8)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		var_9 := `Link`
		_, err = templBuffer.WriteString(var_9)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></td><td class=\"collapsing\"><a href=\"")
		if err != nil {
			return err
		}
		var var_10 templ.SafeURL = templ.URL(fmt.Sprintf("/manage/appointment/%v/reservation", appointment.Id))
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_10)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		var_11 := `Reservations`
		_, err = templBuffer.WriteString(var_11)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></td><td class=\"collapsing\"><button class=\"ui negative button\" hx-swap=\"delete\" hx-target=\"closest .appointment\" hx-delete=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("/manage/appointment/%v", appointment.Id)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		var_12 := `Remove`
		_, err = templBuffer.WriteString(var_12)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></td></tr>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func Appointment(appointment appointmentService.Appointment, schedules []appointmentService.Schedule) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_13 := templ.GetChildren(ctx)
		if var_13 == nil {
			var_13 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_14 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<div class=\"ui container\"><a href=\"/manage/appointment\">")
			if err != nil {
				return err
			}
			var_15 := `Appointments`
			_, err = templBuffer.WriteString(var_15)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</a><div class=\"ui segment\"><h1>")
			if err != nil {
				return err
			}
			var_16 := `Appointment `
			_, err = templBuffer.WriteString(var_16)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("<span id=\"name\">")
			if err != nil {
				return err
			}
			var var_17 string = appointment.Name
			_, err = templBuffer.WriteString(templ.EscapeString(var_17))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</span></h1><form class=\"ui form\" hx-put=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("/manage/appointment/%v", appointment.Id)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" hx-target=\"#name\"><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_18 := `Name`
			_, err = templBuffer.WriteString(var_18)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input name=\"name\" value=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(appointment.Name))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"></div><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_19 := `Instructions`
			_, err = templBuffer.WriteString(var_19)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><textarea name=\"instructions\">")
			if err != nil {
				return err
			}
			var var_20 string = appointment.Instructions
			_, err = templBuffer.WriteString(templ.EscapeString(var_20))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</textarea></div><button class=\"ui primary button\">")
			if err != nil {
				return err
			}
			var_21 := `Update`
			_, err = templBuffer.WriteString(var_21)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</button></form></div><div class=\"ui segment\"><h2>")
			if err != nil {
				return err
			}
			var_22 := `Add new schedule`
			_, err = templBuffer.WriteString(var_22)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h2><form class=\"ui form\" hx-post=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("/manage/appointment/%v/schedule", appointment.Id)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" hx-target=\"#schedules\" hx-swap=\"beforeend\" hx-vals=\"js:timezone:Intl.DateTimeFormat().resolvedOptions().timeZone\"><h3>")
			if err != nil {
				return err
			}
			var_23 := `Date settings`
			_, err = templBuffer.WriteString(var_23)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h3><div class=\"two fields\"><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_24 := `Start Date`
			_, err = templBuffer.WriteString(var_24)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input class=\"ui input\" type=\"date\" name=\"startDate\"></div><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_25 := `Start Date`
			_, err = templBuffer.WriteString(var_25)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input class=\"ui input\" type=\"date\" name=\"endDate\"></div></div><h3>")
			if err != nil {
				return err
			}
			var_26 := `Working Hours`
			_, err = templBuffer.WriteString(var_26)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h3><div class=\"two fields\"><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_27 := `Start Time`
			_, err = templBuffer.WriteString(var_27)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input class=\"ui input\" type=\"time\" name=\"startTime\"></div><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_28 := `End Time`
			_, err = templBuffer.WriteString(var_28)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input class=\"ui input\" type=\"time\" name=\"endTime\"></div></div><div class=\"two fields\"><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_29 := `Length (in minutes)`
			_, err = templBuffer.WriteString(var_29)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input class=\"ui input\" type=\"number\" step=\"1\" min=\"1\" required name=\"length\"></div><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_30 := `Spots`
			_, err = templBuffer.WriteString(var_30)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input class=\"ui input\" type=\"number\" step=\"1\" min=\"1\" required name=\"spots\"></div></div><button class=\"ui submit primary button\">")
			if err != nil {
				return err
			}
			var_31 := `Add`
			_, err = templBuffer.WriteString(var_31)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</button></form></div><h2>")
			if err != nil {
				return err
			}
			var_32 := `Schedules`
			_, err = templBuffer.WriteString(var_32)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h2><table style=\"margin-bottom: 3em\" class=\"ui compact table\" id=\"schedules\"><thead><tr><th>")
			if err != nil {
				return err
			}
			var_33 := `Date`
			_, err = templBuffer.WriteString(var_33)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th>")
			if err != nil {
				return err
			}
			var_34 := `Time`
			_, err = templBuffer.WriteString(var_34)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th>")
			if err != nil {
				return err
			}
			var_35 := `Length`
			_, err = templBuffer.WriteString(var_35)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th>")
			if err != nil {
				return err
			}
			var_36 := `Spots`
			_, err = templBuffer.WriteString(var_36)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th>")
			if err != nil {
				return err
			}
			var_37 := `Status`
			_, err = templBuffer.WriteString(var_37)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th></th><th></th><th></th></tr></thead><tbody>")
			if err != nil {
				return err
			}
			for _, schedule := range schedules {
				err = ScheduleItem(schedule).Render(ctx, templBuffer)
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</tbody></table></div>")
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = templates.Layout().Render(templ.WithChildren(ctx, var_14), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func ScheduleItem(schedule appointmentService.Schedule) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_38 := templ.GetChildren(ctx)
		if var_38 == nil {
			var_38 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<tr class=\"schedule\"><td>")
		if err != nil {
			return err
		}
		var var_39 string = schedule.StartDate
		_, err = templBuffer.WriteString(templ.EscapeString(var_39))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" ")
		if err != nil {
			return err
		}
		var_40 := `- `
		_, err = templBuffer.WriteString(var_40)
		if err != nil {
			return err
		}
		var var_41 string = schedule.EndDate
		_, err = templBuffer.WriteString(templ.EscapeString(var_41))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td>")
		if err != nil {
			return err
		}
		var var_42 string = schedule.StartTime
		_, err = templBuffer.WriteString(templ.EscapeString(var_42))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" ")
		if err != nil {
			return err
		}
		var_43 := `- `
		_, err = templBuffer.WriteString(var_43)
		if err != nil {
			return err
		}
		var var_44 string = schedule.EndTime
		_, err = templBuffer.WriteString(templ.EscapeString(var_44))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td class=\"collapsing\">")
		if err != nil {
			return err
		}
		var var_45 string = fmt.Sprint(schedule.Length)
		_, err = templBuffer.WriteString(templ.EscapeString(var_45))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td class=\"collapsing\">")
		if err != nil {
			return err
		}
		var var_46 string = fmt.Sprint(schedule.Spots)
		_, err = templBuffer.WriteString(templ.EscapeString(var_46))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td class=\"collapsing\">")
		if err != nil {
			return err
		}
		var var_47 string = schedule.Status
		_, err = templBuffer.WriteString(templ.EscapeString(var_47))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td class=\"collapsing\"><a href=\"")
		if err != nil {
			return err
		}
		var var_48 templ.SafeURL = templ.URL(fmt.Sprintf("/manage/appointment/%v/schedule/%v", schedule.AppointmentId, schedule.Id))
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_48)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		var_49 := `detail`
		_, err = templBuffer.WriteString(var_49)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></td><td class=\"collapsing\"><button class=\"ui primary button\" hx-post=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("/manage/appointment/%v/schedule/%v/activate", schedule.AppointmentId, schedule.Id)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"")
		if err != nil {
			return err
		}
		if schedule.Status != "new" {
			_, err = templBuffer.WriteString(" disabled")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString(" hx-target=\"closest .schedule\" hx-swap=\"outerHTML\">")
		if err != nil {
			return err
		}
		var_50 := `Activate`
		_, err = templBuffer.WriteString(var_50)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></td><td class=\"collapsing\"><button class=\"ui negative button\" hx-delete=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("/manage/appointment/%v/schedule/%v", schedule.AppointmentId, schedule.Id)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" hx-target=\"closest .schedule\" hx-swap=\"delete\"")
		if err != nil {
			return err
		}
		if schedule.Status != "new" {
			_, err = templBuffer.WriteString(" disabled")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		var_51 := `Delete`
		_, err = templBuffer.WriteString(var_51)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></td></tr>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func Schedule(schedule appointmentService.Schedule) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_52 := templ.GetChildren(ctx)
		if var_52 == nil {
			var_52 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_53 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<div class=\"ui container\"><a href=\"")
			if err != nil {
				return err
			}
			var var_54 templ.SafeURL = templ.URL(fmt.Sprintf("/manage/appointment/%v", schedule.AppointmentId))
			_, err = templBuffer.WriteString(templ.EscapeString(string(var_54)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\">")
			if err != nil {
				return err
			}
			var_55 := `Back to appointment`
			_, err = templBuffer.WriteString(var_55)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</a><div class=\"ui segment\"><h2>")
			if err != nil {
				return err
			}
			var_56 := `Edit Schedule`
			_, err = templBuffer.WriteString(var_56)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h2><form class=\"ui form\" hx-put=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprintf("/manage/appointment/%v/schedule/%v", schedule.AppointmentId)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" hx-target=\"#error\"><h3>")
			if err != nil {
				return err
			}
			var_57 := `Date settings`
			_, err = templBuffer.WriteString(var_57)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h3><div class=\"two fields\"><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_58 := `Start Date`
			_, err = templBuffer.WriteString(var_58)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input class=\"ui input\" type=\"date\" name=\"startDate\" value=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(schedule.StartDate))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"></div><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_59 := `Start Date`
			_, err = templBuffer.WriteString(var_59)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input class=\"ui input\" type=\"date\" name=\"endDate\" value=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(schedule.EndDate))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"></div></div><h3>")
			if err != nil {
				return err
			}
			var_60 := `Working Hours`
			_, err = templBuffer.WriteString(var_60)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h3><div class=\"two fields\"><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_61 := `Start Time`
			_, err = templBuffer.WriteString(var_61)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input class=\"ui input\" type=\"time\" name=\"startTime\" value=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(schedule.StartTime))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"></div><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_62 := `End Time`
			_, err = templBuffer.WriteString(var_62)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input class=\"ui input\" type=\"time\" name=\"endTime\" value=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(schedule.EndTime))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"></div></div><div class=\"two fields\"><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_63 := `Length (in minutes)`
			_, err = templBuffer.WriteString(var_63)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input class=\"ui input\" type=\"number\" step=\"1\" min=\"1\" required name=\"length\" value=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprint(schedule.Length)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"></div><div class=\"field\"><label>")
			if err != nil {
				return err
			}
			var_64 := `Spots`
			_, err = templBuffer.WriteString(var_64)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label><input class=\"ui input\" type=\"number\" step=\"1\" min=\"1\" required name=\"spots\" value=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(fmt.Sprint(schedule.Spots)))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\"></div></div><button class=\"ui submit primary button\">")
			if err != nil {
				return err
			}
			var_65 := `Add`
			_, err = templBuffer.WriteString(var_65)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</button></form></div><div id=\"error\"></div></div>")
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = templates.Layout().Render(templ.WithChildren(ctx, var_53), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func Reservations(reservations []appointmentService.Reservation) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_66 := templ.GetChildren(ctx)
		if var_66 == nil {
			var_66 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_67 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<div class=\"ui container\"><table class=\"ui compact table\"><thead><tr><th>")
			if err != nil {
				return err
			}
			var_68 := `Start`
			_, err = templBuffer.WriteString(var_68)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th>")
			if err != nil {
				return err
			}
			var_69 := `End`
			_, err = templBuffer.WriteString(var_69)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th>")
			if err != nil {
				return err
			}
			var_70 := `First Name`
			_, err = templBuffer.WriteString(var_70)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th>")
			if err != nil {
				return err
			}
			var_71 := `Last Name`
			_, err = templBuffer.WriteString(var_71)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th>")
			if err != nil {
				return err
			}
			var_72 := `Email`
			_, err = templBuffer.WriteString(var_72)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><th></th></tr></thead><tbody>")
			if err != nil {
				return err
			}
			for _, reservation := range reservations {
				_, err = templBuffer.WriteString("<tr class=\"reservation\"><td>")
				if err != nil {
					return err
				}
				var var_73 string = reservation.Start
				_, err = templBuffer.WriteString(templ.EscapeString(var_73))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</td><td>")
				if err != nil {
					return err
				}
				var var_74 string = reservation.End
				_, err = templBuffer.WriteString(templ.EscapeString(var_74))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</td><td>")
				if err != nil {
					return err
				}
				var var_75 string = reservation.FirstName
				_, err = templBuffer.WriteString(templ.EscapeString(var_75))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</td><td>")
				if err != nil {
					return err
				}
				var var_76 string = reservation.LastName
				_, err = templBuffer.WriteString(templ.EscapeString(var_76))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</td><td>")
				if err != nil {
					return err
				}
				var var_77 string = reservation.Email
				_, err = templBuffer.WriteString(templ.EscapeString(var_77))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</td><td><button class=\"ui button negative\" hx-target=\"closest .reservation\" hx-swap=\"delete\" hx-delete=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(templ.EscapeString(fmt.Sprintf("/manage/appointment/%v/reservation/%v", reservation.AppointmentId, reservation.Id))))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\">")
				if err != nil {
					return err
				}
				var_78 := `Cancel`
				_, err = templBuffer.WriteString(var_78)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</button></td></tr>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</tbody></table></div>")
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = templates.Layout().Render(templ.WithChildren(ctx, var_67), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
